Having seen our providers' code, the strengths of creating a custom GUI rather than using JTable become clear. They correctly implemented the Features interface as described in class, and seeing it in action helped make the concept of a controller of this kind clearer to us. Furthermore, it really shows the strength of encapsulation and ensuring that classes only communicate through their interfaces, and ensuring no single method does "too big" of a job. Rather, each method does a smaller job, and then other methods combine them to accomplish the bigger tasks.
Their naming was also a lot better than ours, since many of our methods were added later on and haphazardly to cover anything we found we needed halfway into writing our views, such as getCellAt() and getEvaluatedAt(). These names are definitely less descriptive than getRawValue() and getCellValue(), among other methods.
Their code also seems to contain less redundant code. There are definitely some methods that are not used, or methods that are so similar that they can be substituted for one another in our code, and our providers' code was comparatively very succinct.